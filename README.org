#+Title: Common envelope initiated by the secondaries
#+author: [[mailto:mrenzo@flatironinstitute.org][Mathieu Renzo]]

#+BEGIN_html
<p align="center">
<a href="https://github.com/showyourwork/showyourwork">
<img width = "450" src="https://raw.githubusercontent.com/showyourwork/.github/main/images/showyourwork.png" alt="showyourwork"/>
</a>
<br>
<br>
<a href="https://github.com/mathren/CE_accretors/actions/workflows/build.yml">
<img src="https://github.com/mathren/CE_accretors/actions/workflows/build.yml/badge.svg?branch=main" alt="Article status"/>
</a>
<a href="https://github.com/mathren/CE_accretors/raw/main-pdf/arxiv.tar.gz">
<img src="https://img.shields.io/badge/article-tarball-blue.svg?style=flat" alt="Article tarball"/>
</a>
<a href="https://github.com/mathren/CE_accretors/raw/main-pdf/CE_accretors.pdf">
<img src="https://img.shields.io/badge/article-pdf-blue.svg?style=flat" alt="Read the article"/>
</a>
</p>
#+END_html


Access the latest successful build of the manuscript from the badge
above.

You can see the source in =src/tex/CE_accretors.tex=, which you can edit
and should be able to compile locally (more below).

** Why care about the first mass transfer on future common envelope?

   Most binary evolution scenarios for gravitational wave sources rely
   on a common envelope (CE) to reduce the separation (exceptions are
   chemically homogeneous evolution and stable mass transfer
   channels). The CE is initiated by a star that has previously
   accreted mass during a stable Roche lobe overflow (RLOF) phase.

   We want to study how the previous accretion through RLOF influences
   the radial evolution and the binding energy of the accretor star.
   This may be different from single stars, because accretion of
   matter from a companion leads to increase of the convective core
   mass, rejuvenation, and changes in the density, temperature,
   entropy, and composition of the star and ultimately its binding
   energy profile.

** Migration to new showyourwork

   On =fi_w= excluding time to download the tarball from zenodo, but
   doing all the processing to intermediate results and upload on cache:

#+BEGIN_SRC bash
   real    30m13.209s
   user    27m9.104s
   sys     0m59.076s
#+END_SRC

*** DONE Simple test
    The scripts =convert_MESA_output.py= should create  =src/data/try.npy=.
    =zenodo_plotter.py= reads it and creates a figure.
*** DONE downloading tarball and converting
*** DONE cleanup figures

    - [X] Refactor scripts in =/src/figures/=.
    - [X] change =graphicspath= in =CE_accretors.tex.=
    - [X] Remove figures from repo

*** DONE caching of intermediate results

    - [X] modify Snakemake file to have caching
    - [X] modify dependencies in =showyourwork.yml=
    - [X] modify tex file to include figure

*** TODO browsable folders on zenodo

    - [ ] right now the cache on [[https://sandbox.zenodo.org/deposit/1071935][zenodo sandbox]] re-uploads a megafolder

*** Issue to report on =showyourwork=
***** =./showyourwork/cache/= becomes pretty huge pretty fast: clean-up?
***** double copy in =.showyourwork/cache= and =src/data=?

** Local compilation

   You can clone this repository and just run =showyourwork= and it
   should work. The first time it will download the data (1.1 Gb) and
   process them, which may take a very long while.

** TODO Document How to reproduce the engineered models

   - [ ] save in repo
     =/ssh:fi_w:/mnt/home/mrenzo/Templates/binary_mesa/simplified_profile=
     this contains modified inputs and template
   - [ ] document this
